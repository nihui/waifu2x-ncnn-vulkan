name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  VULKANSDK_VERSION: 1.4.309.0
  DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer
  UseMultiToolTask: true

concurrency:
  group: CI-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: build
      run: |
        mkdir build; cd build
        cmake -A x64 ../src
        cmake --build . --config Release -j 4

  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: create-dummy-setup.py
      run: |
        cat << EOF > setup.py
        from setuptools import setup, find_packages
        from setuptools.dist import Distribution
        class BinaryDistribution(Distribution):
            def has_ext_modules(foo):
                return True
        setup(name='dummy', version='0.1', packages=find_packages(), distclass=BinaryDistribution)
        EOF

    - name: build
      uses: pypa/cibuildwheel@v3.1.3
      env:
        CIBW_ARCHS_LINUX: "x86_64"
        CIBW_BUILD: 'cp310-manylinux_x86_64'
        CIBW_BUILD_VERBOSITY: 1
        CIBW_REPAIR_WHEEL_COMMAND: ""
        CIBW_BEFORE_ALL: cd /project/ &&
          mkdir build && cd build &&
          cmake -DCMAKE_INSTALL_PREFIX=/host/tmp/install ../src &&
          cmake --build . -j $(nproc)
      with:
        output-dir: wheelhouse3

  macos:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: vulkansdk
      run: |
        wget -q https://sdk.lunarg.com/sdk/download/${{ env.VULKANSDK_VERSION }}/mac/vulkansdk-macos-${{ env.VULKANSDK_VERSION }}.zip?Human=true -O vulkansdk-macos-${{ env.VULKANSDK_VERSION }}.zip
        unzip -q vulkansdk-macos-${{ env.VULKANSDK_VERSION }}.zip
        sudo InstallVulkan-${{ env.VULKANSDK_VERSION }}.app/Contents/MacOS/InstallVulkan-${{ env.VULKANSDK_VERSION }} --root $GITHUB_WORKSPACE/${{ env.VULKANSDK_VERSION }} --accept-licenses --default-answer --confirm-command install
    - name: build-x86_64
      run: |
        export VULKAN_SDK=$GITHUB_WORKSPACE/${{ env.VULKANSDK_VERSION }}/macOS
        mkdir build-x86_64 && cd build-x86_64
        cmake -DUSE_STATIC_MOLTENVK=ON -DCMAKE_OSX_ARCHITECTURES="x86_64" \
            -DVulkan_LIBRARY=$GITHUB_WORKSPACE/${{ env.VULKANSDK_VERSION }}/macOS/lib/MoltenVK.xcframework/macos-arm64_x86_64/libMoltenVK.a \
            ../src
        cmake --build . -j 4
    - name: build-arm64
      run: |
        export VULKAN_SDK=$GITHUB_WORKSPACE/${{ env.VULKANSDK_VERSION }}/macOS
        mkdir build-arm64 && cd build-arm64
        cmake -DUSE_STATIC_MOLTENVK=ON -DCMAKE_OSX_ARCHITECTURES="arm64" \
            -DVulkan_LIBRARY=$GITHUB_WORKSPACE/${{ env.VULKANSDK_VERSION }}/macOS/lib/MoltenVK.xcframework/macos-arm64_x86_64/libMoltenVK.a \
            ../src
        cmake --build . -j 4
